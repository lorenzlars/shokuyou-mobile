// This file is auto-generated by @hey-api/openapi-ts

import {
  type Options as ClientOptions,
  type TDataShape,
  type Client,
  formDataBodySerializer,
} from '@hey-api/client-axios';
import type {
  GetRecipesData,
  GetRecipesResponse,
  CreateRecipeData,
  CreateRecipeResponse,
  DeleteRecipeData,
  GetRecipeData,
  GetRecipeResponse,
  UpdateRecipeData,
  UpdateRecipeResponse,
  DeleteImageData,
  UploadImageData,
  UploadImageResponse,
  UpdateImageData,
  UpdateImageResponse,
  GetIngredientsData,
  GetIngredientsResponse,
  CreateIngredientData,
  CreateIngredientResponse,
  DeleteIngredientsData,
  GetIngredientData,
  GetIngredientResponse,
  UpdateIngredientsData,
  UpdateIngredientsResponse,
  UserLoginData,
  UserLoginResponse,
  UserRegisterData,
  GetProfileData,
  GetProfileResponse,
  GetPlansData,
  GetPlansResponse,
  CreatePlanData,
  CreatePlanResponse,
  RemovePlanData,
  GetPlanData,
  GetPlanResponse,
  UpdatePlanData,
  UpdatePlanResponse,
  ImportBackupData,
  ScrapRecipeData,
  ScrapRecipeResponse,
  GetProductsData,
  GetProductsResponse,
  CreateProductData,
  CreateProductResponse,
  DeleteProductData,
  GetProductData,
  GetProductResponse,
  UpdateProductData,
  UpdateProductResponse,
  GetScheduledMealsData,
  GetScheduledMealsResponse,
  CreateScheduledMealData,
  CreateScheduledMealResponse,
  DeleteScheduledMealData,
  GetScheduledMealData,
  GetScheduledMealResponse,
  UpdateScheduledMealData,
  UpdateScheduledMealResponse,
  SyncPullData,
  SyncPullResponse,
  SyncPushData,
} from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
};

export class RecipesService {
  /**
   * Get all recipes with pagination
   */
  public static getRecipes<ThrowOnError extends boolean = false>(
    options: Options<GetRecipesData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<GetRecipesResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/recipes',
      ...options,
    });
  }

  /**
   * Add a new recipes
   */
  public static createRecipe<ThrowOnError extends boolean = false>(
    options: Options<CreateRecipeData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<CreateRecipeResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/recipes',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }

  /**
   * Delete a single recipe
   */
  public static deleteRecipe<ThrowOnError extends boolean = false>(
    options: Options<DeleteRecipeData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/recipes/{id}',
      ...options,
    });
  }

  /**
   * Get a single recipe
   */
  public static getRecipe<ThrowOnError extends boolean = false>(
    options: Options<GetRecipeData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<GetRecipeResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/recipes/{id}',
      ...options,
    });
  }

  /**
   * Replace a single recipe
   */
  public static updateRecipe<ThrowOnError extends boolean = false>(
    options: Options<UpdateRecipeData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).put<UpdateRecipeResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/recipes/{id}',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }

  /**
   * Delete an image to from the recipe
   */
  public static deleteImage<ThrowOnError extends boolean = false>(
    options: Options<DeleteImageData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/recipes/{id}/image',
      ...options,
    });
  }

  /**
   * Add an image to a recipe
   */
  public static uploadImage<ThrowOnError extends boolean = false>(
    options: Options<UploadImageData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<UploadImageResponse, unknown, ThrowOnError>({
      ...formDataBodySerializer,
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/recipes/{id}/image',
      ...options,
      headers: {
        'Content-Type': null,
        ...options?.headers,
      },
    });
  }

  /**
   * Replace the image of the recipe
   */
  public static updateImage<ThrowOnError extends boolean = false>(
    options: Options<UpdateImageData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).put<UpdateImageResponse, unknown, ThrowOnError>({
      ...formDataBodySerializer,
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/recipes/{id}/image',
      ...options,
      headers: {
        'Content-Type': null,
        ...options?.headers,
      },
    });
  }
}

export class IngredientsService {
  public static getIngredients<ThrowOnError extends boolean = false>(
    options: Options<GetIngredientsData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<GetIngredientsResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/ingredients',
      ...options,
    });
  }

  public static createIngredient<ThrowOnError extends boolean = false>(
    options: Options<CreateIngredientData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<CreateIngredientResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/ingredients',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }

  public static deleteIngredients<ThrowOnError extends boolean = false>(
    options: Options<DeleteIngredientsData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/ingredients/{id}',
      ...options,
    });
  }

  public static getIngredient<ThrowOnError extends boolean = false>(
    options: Options<GetIngredientData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<GetIngredientResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/ingredients/{id}',
      ...options,
    });
  }

  public static updateIngredients<ThrowOnError extends boolean = false>(
    options: Options<UpdateIngredientsData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).put<UpdateIngredientsResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/ingredients/{id}',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }
}

export class AuthService {
  /**
   * Login the current user
   */
  public static userLogin<ThrowOnError extends boolean = false>(
    options: Options<UserLoginData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<UserLoginResponse, unknown, ThrowOnError>({
      url: '/v1/auth/login',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }

  /**
   * Register a new user
   */
  public static userRegister<ThrowOnError extends boolean = false>(
    options: Options<UserRegisterData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      url: '/v1/auth/register',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }

  /**
   * Get the current user
   */
  public static getProfile<ThrowOnError extends boolean = false>(
    options?: Options<GetProfileData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<GetProfileResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/auth/profile',
      ...options,
    });
  }
}

export class PlansService {
  public static getPlans<ThrowOnError extends boolean = false>(
    options?: Options<GetPlansData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<GetPlansResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/plans',
      ...options,
    });
  }

  public static createPlan<ThrowOnError extends boolean = false>(
    options: Options<CreatePlanData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<CreatePlanResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/plans',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }

  public static removePlan<ThrowOnError extends boolean = false>(
    options: Options<RemovePlanData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/plans/{id}',
      ...options,
    });
  }

  public static getPlan<ThrowOnError extends boolean = false>(
    options: Options<GetPlanData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<GetPlanResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/plans/{id}',
      ...options,
    });
  }

  public static updatePlan<ThrowOnError extends boolean = false>(
    options: Options<UpdatePlanData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).put<UpdatePlanResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/plans/{id}',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }
}

export class DataService {
  public static importBackup<ThrowOnError extends boolean = false>(
    options: Options<ImportBackupData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      ...formDataBodySerializer,
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/data/import/recipes',
      ...options,
      headers: {
        'Content-Type': null,
        ...options?.headers,
      },
    });
  }

  public static scrapRecipe<ThrowOnError extends boolean = false>(
    options: Options<ScrapRecipeData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<ScrapRecipeResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/data/scrap/recipe',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }
}

export class ProductsService {
  public static getProducts<ThrowOnError extends boolean = false>(
    options: Options<GetProductsData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<GetProductsResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/products',
      ...options,
    });
  }

  /**
   * Add a new product
   */
  public static createProduct<ThrowOnError extends boolean = false>(
    options: Options<CreateProductData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<CreateProductResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/products',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }

  public static deleteProduct<ThrowOnError extends boolean = false>(
    options: Options<DeleteProductData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/products/{id}',
      ...options,
    });
  }

  public static getProduct<ThrowOnError extends boolean = false>(
    options: Options<GetProductData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<GetProductResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/products/{id}',
      ...options,
    });
  }

  public static updateProduct<ThrowOnError extends boolean = false>(
    options: Options<UpdateProductData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).put<UpdateProductResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/products/{id}',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }
}

export class ScheduledMealsService {
  public static getScheduledMeals<ThrowOnError extends boolean = false>(
    options: Options<GetScheduledMealsData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<GetScheduledMealsResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/scheduled-meals',
      ...options,
    });
  }

  public static createScheduledMeal<ThrowOnError extends boolean = false>(
    options: Options<CreateScheduledMealData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<
      CreateScheduledMealResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/scheduled-meals',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }

  public static deleteScheduledMeal<ThrowOnError extends boolean = false>(
    options: Options<DeleteScheduledMealData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/scheduled-meals/{id}',
      ...options,
    });
  }

  public static getScheduledMeal<ThrowOnError extends boolean = false>(
    options: Options<GetScheduledMealData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<GetScheduledMealResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/scheduled-meals/{id}',
      ...options,
    });
  }

  public static updateScheduledMeal<ThrowOnError extends boolean = false>(
    options: Options<UpdateScheduledMealData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).put<
      UpdateScheduledMealResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/scheduled-meals/{id}',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }
}

export class SyncService {
  public static syncPull<ThrowOnError extends boolean = false>(
    options: Options<SyncPullData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<SyncPullResponse, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/sync',
      ...options,
    });
  }

  public static syncPush<ThrowOnError extends boolean = false>(
    options: Options<SyncPushData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/v1/sync',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    });
  }
}
